<?php

/**
 * @file
 * Manage Application Submission Module
 */

use Drupal\webform\Utility\WebformFormHelper;
use Drupal\Core\Form\FormStateInterface;

use Drupal\application\Controller\ApplicationController;
use Drupal\application\Controller\SBAForgivenessRequestController;
use Drupal\application\Controller\SBALFAController;
use Drupal\application\Controller\LenderController;
use Drupal\application\Controller\SBALoanController;
use Drupal\application\Controller\VerifyController;

/** Notes form **/
function application_form_webform_submission_apply_for_ppp_loan_notes_form_alter(array &$form, FormStateInterface &$form_state, $form_id) {
    $entity = $form_state->getFormObject()->getEntity();
    if ($entity->isLocked()) {
        return;
    }
}

function application_form_webform_submission_apply_for_ppp_loan_edit_all_form_alter(array &$form, FormStateInterface &$form_state, $form_id) {
    $entity = $form_state->getFormObject()->getEntity();
    if ($entity->isLocked()) {
        return $form["elements"]["loan_officer_page"];
    }
    
    $elements = WebformFormHelper::flattenElements($form);
    $application_controller = new ApplicationController($elements);
    $application_controller->login();
    $application_controller->downloadBorrowerForm($form, $form_state);
    $application_controller->downloadSBADocuments($form, $form_state);
    
    $form["elements"]["loan_officer_page"]["#prefix"] = '<div id="loan-officer-ajax-wrapper">';
    $form["elements"]["loan_officer_page"]["#suffix"] = "</div>";
    /*
    $form["elements"]["verify_id_page"]["#prefix"] = '<div id="verify-id-ajax-wrapper">';
    $form["elements"]["verify_id_page"]["#suffix"] = '</div>';

    $form["elements"]["verify_id_page"]["btn_verify_id"] = [
        "#type" => "button",
        "#value" => "Verify ID Photos",
        "#ajax" => [
            "callback" => "application_verify_id",
            "event" => "click",
            "wrapper" => "verify-id-ajax-wrapper",
            "progress" => [
                "type" => "throbber",
                "message" => "Verifing...",
            ],
        ]
    ];
    */
    $form["elements"]["loan_officer_page"]["btn_save_status"] = [
        "#type" => "button",
        "#value" => "Save Status",
        "#ajax" => [
            "callback" => "application_save_status",
            "event" => "click",
            "wrapper" => "loan-officer-ajax-wrapper",
            "progress" => [
                "type" => "throbber",
                "message" => "Saving...",
            ],
        ]
    ];

    $form["elements"]["loan_officer_page"]["btn_send_borrower_form"] = [
        "#type" => "button",
        "#value" => "Send Borrower App",
        "#ajax" => [
            "callback" => 'application_send_borrower_docusign_form',
            "event" => "click",
            "wrapper" => "loan-officer-ajax-wrapper",
            "progress" => [
                "type" => "throbber",
                "message" => "Sending...",
            ],
        ]
    ];
    
    $form["elements"]["loan_officer_page"]["btn_request_to_sba"] = [
        "#type" => "button",
        "#value" => "Submit to SBA",
        "#ajax" => [
            "callback" => 'application_request_to_sba',
            "event" => "click",
            "wrapper" => "loan-officer-ajax-wrapper",
            "progress" => [
                "type" => "throbber",
                "message" => "Requesting...",
            ],
        ]
    ];

    $form["elements"]["loan_officer_page"]["btn_send_sba_note"] = [
        "#type" => "button",
        "#value" => "Send Note/EO",
        "#ajax" => [
            "callback" => 'application_send_sba_note',
            "event" => "click",
            "wrapper" => "loan-officer-ajax-wrapper",
            "progress" => [
                "type" => "throbber",
                "message" => "Requesting...",
            ],
        ]
    ];

    $form["elements"]["loan_officer_page"]["btn_send_lender_form"] = [
        "#type" => "button",
        "#value" => "Send Lender Form",
        "#ajax" => [
            "callback" => 'application_send_lender_docusign_form',
            "event" => "click",
            "wrapper" => "loan-officer-ajax-wrapper",
            "progress" => [
                "type" => "throbber",
                "message" => "Sending...",
            ],
        ]
    ];
    
    application_assign_loan_officer($form, $form_state);
    
    if (empty($elements["adjusted_loan_amount"]["#default_value"])) {
        $elements["adjusted_loan_amount"]["#value"] = $application_controller->getLoanAmount();
        $elements["adjusted_loan_amount"]["#default_value"] = $application_controller->getLoanAmount();
    }

    if (empty($elements["adjusted_average_payroll"]["#default_value"])) {
        $elements["adjusted_average_payroll"]["#value"] = $application_controller->getAveragePayrollAmount();
        $elements["adjusted_average_payroll"]["#default_value"] = $application_controller->getAveragePayrollAmount();
    }
    
    $controller = new LenderController();
    $controller->createLenderFormPDF($form, $form_state);

    $sba_controller = new SBALoanController();
    $sba_controller->getLoanStatus($form, $form_state);
    return $form["elements"]["loan_officer_page"];
}

function application_assign_loan_officer(array &$form, FormStateInterface &$form_state) {
    $elements = WebformFormHelper::flattenElements($form);
    $entity = $form_state->getFormObject()->getEntity();
    $data = $entity->getData();
    if (!empty($elements["referer_name"]["#default_value"])) {
        if (!empty($elements["loan_officer"]["#default_value"])) {
            return;
        }
        $priority_code = intval($elements["referer_name"]["#default_value"]);

        $uids = \Drupal::entityQuery('user')
                 ->condition('field_priority_code', $priority_code)
                 ->range(0, 1)
                 ->execute();
        $uid = 0;
        foreach ($uids as $user_id) {
            $uid = intval($user_id);
        }

        if ($uid > 0) {
            $user = \Drupal\user\Entity\User::load($uid);
            if (!empty($user) && !$user->isBlocked() && ( in_array('lender', $user->getRoles()) || in_array('administrator', $user->getRoles()) )) {
                \Drupal::logger('Assign Loan')->notice($data['loan_serial'] . " Assign Loan Officer: " . $uid . " " .$user->getDisplayName() . " By Priority Code: " . $priority_code);
                $data["loan_officer"] = $uid;
                $data["first_officer"] = $uid;
                $data["loan_officer_email"] = $user->getEmail();

                $elements["loan_officer"]["#value"] = $uid;
                $elements["loan_officer"]["#default_value"] = $uid;
                $elements["first_officer"]["#value"] = $uid;
                $elements["first_officer"]["#default_value"] = $uid;
                $elements["loan_officer_email"]["#value"] = $user->getEmail();
                $elements["loan_officer_email"]["#default_value"] = $user->getEmail();
            }
            else {
                \Drupal::logger('Assign Loan')->notice($data['loan_serial'] . " Can not found Loan Officer: " . $uid);
                $admin = \Drupal\user\Entity\User::load(1);
                $data["loan_officer"] = 1;
                $data["first_officer"] = 1;
                $data["loan_officer_email"] = $admin->getEmail();

                $elements["loan_officer"]["#value"] = 1;
                $elements["loan_officer"]["#default_value"] = 1;
                $elements["first_officer"]["#value"] = 1;
                $elements["first_officer"]["#default_value"] = 1;
                $elements["loan_officer_email"]["#value"] = $admin->getEmail();
                $elements["loan_officer_email"]["#default_value"] = $admin->getEmail();
            }
        }
        else {
            \Drupal::logger('Assign Loan')->notice($data['loan_serial'] . " Can not found Loan Officer by Priority Code: " . $priority_code);
            $admin = \Drupal\user\Entity\User::load(1);
            $data["loan_officer"] = 1;
            $data["first_officer"] = 1;
            $data["loan_officer_email"] = $admin->getEmail();

            $elements["loan_officer"]["#value"] = 1;
            $elements["loan_officer"]["#default_value"] = 1;
            $elements["first_officer"]["#value"] = 1;
            $elements["first_officer"]["#default_value"] = 1;
            $elements["loan_officer_email"]["#value"] = $admin->getEmail();
            $elements["loan_officer_email"]["#default_value"] = $admin->getEmail();
        }
    }
    else {
        // If loan officer is existed
        if (!empty($elements["loan_officer"]["#default_value"]) || !empty($data["loan_officer"]) ) {
            return;
        }

        $officer_id_list = [1301, 9803, 1283, 85, 90, 1012, 88, 89, 73, 9804, 
                            12444, 75, 68, 6786, 79, 9392, 78, 6105, 8741, 86,
                            87, 76];

        $office_num = count($officer_id_list);

        $assign_order = intval(\Drupal::state()->get('assign_order'));
        if ($assign_order < 0 || $assign_order >= $office_num) {
            $assign_order = 0;
        }
        
        $uid = $officer_id_list[$assign_order];
        $assign_order++;
        if ($assign_order >= $office_num) {
            $assign_order = 0;
        }
        \Drupal::state()->set('assign_order', $assign_order);
        $user = \Drupal\user\Entity\User::load($uid);

        if (!empty($user) && !$user->isBlocked()) {
            \Drupal::logger('Assign Loan')->notice("Assign Loan Officer: " . $uid . " " .$user->getDisplayName());
            $data["loan_officer"] = $uid;
            $data["first_officer"] = $uid;
            $data["loan_officer_email"] = $user->getEmail();

            $elements["loan_officer"]["#value"] = $uid;
            $elements["loan_officer"]["#default_value"] = $uid;
            $elements["first_officer"]["#value"] = $uid;
            $elements["first_officer"]["#default_value"] = $uid;
            $elements["loan_officer_email"]["#value"] = $user->getEmail();
            $elements["loan_officer_email"]["#default_value"] = $user->getEmail();
        }
        else {
            \Drupal::logger('Assign Loan')->notice("Can not found Loan Officer: " . $uid);
            $admin = \Drupal\user\Entity\User::load(86);
            $data["loan_officer"] = 86;
            $data["first_officer"] = 86;
            $data["loan_officer_email"] = $admin->getEmail();

            $elements["loan_officer"]["#value"] = 86;
            $elements["loan_officer"]["#default_value"] = 86;
            $elements["first_officer"]["#value"] = 86;
            $elements["first_officer"]["#default_value"] = 86;
            $elements["loan_officer_email"]["#value"] = $admin->getEmail();
            $elements["loan_officer_email"]["#default_value"] = $admin->getEmail();
        }

        
    }
    $entity->setData($data);
    $entity->save();
}

function application_new_loan_officer(array &$form, FormStateInterface &$form_state) {
    $elements = WebformFormHelper::flattenElements($form);
    $entity = $form_state->getFormObject()->getEntity();
    $data = $entity->getData();
    if (!empty($elements["referer_name"]["#default_value"])) {
        if (!empty($elements["loan_officer"]["#default_value"])) {
            return;
        }
        $priority_code = intval($elements["referer_name"]["#default_value"]);

        $uids = \Drupal::entityQuery('user')
                 ->condition('field_priority_code', $priority_code)
                 ->range(0, 1)
                 ->execute();
        $uid = 0;
        foreach ($uids as $user_id) {
            $uid = intval($user_id);
        }

        if ($uid > 0) {
            $user = \Drupal\user\Entity\User::load($uid);
            if (!empty($user) && !$user->isBlocked() && ( in_array('lender', $user->getRoles()) || in_array('administrator', $user->getRoles()) )) {
                \Drupal::logger('Assign Loan')->notice("Assign Loan Officer: " . $uid . " " .$user->getDisplayName() . " By Priority Code: " . $priority_code);
                $data["loan_officer"] = $uid;
                $data["first_officer"] = $uid;
                $data["loan_officer_email"] = $user->getEmail();
                
            }
            else {
                \Drupal::logger('Assign Loan')->notice("Can not found Loan Officer: " . $uid);
                $admin = \Drupal\user\Entity\User::load(1);
                $data["loan_officer"] = 1;
                $data["first_officer"] = 1;
                $data["loan_officer_email"] = $admin->getEmail();
            }
        }
        else {
            \Drupal::logger('Assign Loan')->notice("Can not found Loan Officer by Priority Code: " . $priority_code);
            $admin = \Drupal\user\Entity\User::load(1);
            $data["loan_officer"] = 1;
            $data["first_officer"] = 1;
            $data["loan_officer_email"] = $admin->getEmail();
        }
    }
    else {
        
        $officer_id_list = [1301, 9803, 1283, 85, 1012, 90, 88, 89, 73, 9804, 
                            12444, 75, 68, 6786, 79, 9392, 78, 6105, 8741, 86,
                            87, 76, 1112];

        $office_num = count($officer_id_list);

        $assign_order = intval(\Drupal::state()->get('assign_order'));
        if ($assign_order < 0 || $assign_order >= $office_num) {
            $assign_order = 0;
        }
        
        $uid = $officer_id_list[$assign_order];
        $assign_order++;
        if ($assign_order >= $office_num) {
            $assign_order = 0;
        }
        \Drupal::state()->set('assign_order', $assign_order);
        $user = \Drupal\user\Entity\User::load($uid);

        if (!empty($user) && !$user->isBlocked()) {
            \Drupal::logger('Assign Loan')->notice("Assign Loan Officer: " . $uid . " " .$user->getDisplayName());
            $data["loan_officer"] = $uid;
            $data["first_officer"] = $uid;
            $data["loan_officer_email"] = $user->getEmail();
        }
        else {
            \Drupal::logger('Assign Loan')->notice("Can not found Loan Officer: " . $uid);
            $admin = \Drupal\user\Entity\User::load(86);
            $data["loan_officer"] = 86;
            $data["first_officer"] = 86;
            $data["loan_officer_email"] = $admin->getEmail();
        }

        
    }
    $entity->setData($data);
    $entity->save();
}

function application_form_webform_submission_apply_for_flp_loan_add_form_alter(array &$form, FormStateInterface &$form_state, $form_id) {
    $elements = WebformFormHelper::flattenElements($form);
    // calculate forgive amount
    $order = array("$", " ", ",");

    #$forgiveness_amount = str_replace($order, "", $elements["forgiveness_calculation"]["#default_value"]);
    #$eidl_amount = str_replace($order, "", $elements["eidl_advance_amount_if_applicable_"]["#default_value"]);

    #$forgive_amount = $forgiveness_amount - $eidl_amount;

    #$elements["forgive_amount"]["#default_value"] = $forgive_amount;
    $controller = new SBALFAController($elements);
    $controller->login();
    $form['actions']['submit']['#submit'][]  = 'application_send_fogive_form';
}

function application_form_webform_submission_apply_for_ppp_loan_add_form_alter(array &$form, FormStateInterface &$form_state, $form_id) {
    $form['actions']['submit']['#submit'][]  = 'application_submit_borrower_form';
}

function application_form_webform_submission_apply_for_ppp_loan_edit_form_alter(array &$form, FormStateInterface &$form_state, $form_id) {
    $form['actions']['submit']['#submit'][]  = 'application_submit_borrower_form';
}

function application_verify_id(array &$form, FormStateInterface &$form_state) {
    $controller = new VerifyController();
    #$controller->createApplicant($form, $form_state);
    
    #$controller->uploadPhoto($form, $form_state);
    
    #$controller->uploadLivePhoto($form, $form_state);

    return $form["elements"]["verify_id_page"];
}

function application_submit_borrower_form(array &$form, FormStateInterface &$form_state) {
    
    $entity = $form_state->getFormObject()->getEntity();
    $data = $entity->getData();
    
    $elements = WebformFormHelper::flattenElements($form);

    if (!empty($elements["referer_name"]["#default_value"])) {
        if (!empty($elements["loan_officer"]["#default_value"])) {
            return;
        }
        $priority_code = intval($elements["referer_name"]["#default_value"]);

        $uids = \Drupal::entityQuery('user')
                 ->condition('field_priority_code', $priority_code)
                 ->range(0, 1)
                 ->execute();
        $uid = 0;
        foreach ($uids as $user_id) {
            $uid = intval($user_id);
        }

        if ($uid > 0) {
            $user = \Drupal\user\Entity\User::load($uid);
            if (!empty($user) && !$user->isBlocked() && ( in_array('lender', $user->getRoles()) || in_array('administrator', $user->getRoles()) )) {
                \Drupal::logger('Assign Loan')->notice("Assign Loan Officer: " . $uid . " " .$user->getDisplayName() . " By Priority Code: " . $priority_code);
                $data["loan_officer"] = $uid;
                $data["first_officer"] = $uid;
                $data["loan_officer_email"] = $user->getEmail();
                
            }
            else {
                \Drupal::logger('Assign Loan')->notice("Can not found Loan Officer: " . $uid);
                $admin = \Drupal\user\Entity\User::load(1);
                $data["loan_officer"] = 1;
                $data["first_officer"] = 1;
                $data["loan_officer_email"] = $admin->getEmail();
            }
        }
        else {
            \Drupal::logger('Assign Loan')->notice("Can not found Loan Officer by Priority Code: " . $priority_code);
            $admin = \Drupal\user\Entity\User::load(1);
            $data["loan_officer"] = 1;
            $data["first_officer"] = 1;
            $data["loan_officer_email"] = $admin->getEmail();
        }
    }
    else {
        
        $officer_id_list = [1301, 9803, 1283, 85, 1012, 90, 88, 89, 73, 9804, 
                            12444, 75, 68, 6786, 79, 9392, 78, 6105, 8741, 86,
                            87, 76, 1112];

        $office_num = count($officer_id_list);

        $assign_order = intval(\Drupal::state()->get('assign_order'));
        if ($assign_order < 0 || $assign_order >= $office_num) {
            $assign_order = 0;
        }
        
        $uid = $officer_id_list[$assign_order];
        $assign_order++;
        if ($assign_order >= $office_num) {
            $assign_order = 0;
        }
        \Drupal::state()->set('assign_order', $assign_order);
        $user = \Drupal\user\Entity\User::load($uid);

        if (!empty($user) && !$user->isBlocked()) {
            \Drupal::logger('Assign Loan')->notice("Assign Loan Officer: " . $uid . " " .$user->getDisplayName());
            $data["loan_officer"] = $uid;
            $data["first_officer"] = $uid;
            $data["loan_officer_email"] = $user->getEmail();
        }
        else {
            \Drupal::logger('Assign Loan')->notice("Can not found Loan Officer: " . $uid);
            $admin = \Drupal\user\Entity\User::load(86);
            $data["loan_officer"] = 86;
            $data["first_officer"] = 86;
            $data["loan_officer_email"] = $admin->getEmail();
        }

        
    }
    
    if ($elements["round"]["#default_value"] == "Yes") {
        $data["draw_status"] = "Second Draw";
        $elements["draw_status"]["#value"] = "Second Darw";
        $elements["draw_status"]["#default_value"] = "Second Draw";
    }
    else {
        $data["draw_status"] = "First Draw";
        $elements["draw_status"]["#value"] = "First Darw";
        $elements["draw_status"]["#default_value"] = "First Draw";
    }
    $entity->setData($data);
    $entity->save();
    
    return $form["elements"]["loan_officer_page"];
}

function application_save_status(array &$form, FormStateInterface &$form_state) {
    $entity = $form_state->getFormObject()->getEntity();
    $data = $entity->getData();
    $elements = WebformFormHelper::flattenElements($form);
    
    if (!empty($elements["loan_officer"]["#value"]) && !empty($elements["loan_officer_email"])) {
        $uid = $elements["loan_officer"]["#value"];
        $user = \Drupal\user\Entity\User::load($uid);
        if (!empty($user)) {
            $data["loan_officer_email"] = $user->getEmail();
        
            $elements["loan_officer_email"]["#default_value"] = $user->getEmail();
            $elements["loan_officer_email"]["#value"] = $user->getEmail();
            $elements["loan_officer"]["#default_value"] = $uid;
            $elements["loan_officer"]["#value"] = $uid;
        }
        
    }
    
    $data["adjusted_loan_amount"] = $form["elements"]["loan_officer_page"]["adjusted_loan_amount"]["#default_value"];
    $entity->setData($data);
    $entity->save();
    return $form["elements"]["loan_officer_page"];
}

function application_send_borrower_docusign_form(array &$form, FormStateInterface $form_state) {
    $elements = WebformFormHelper::flattenElements($form);
    $application_controller = new ApplicationController($elements);
    $application_controller->login();
    $application_controller->sendBorrowerDocuSignForm($form, $form_state);
    $entity = $form_state->getFormObject()->getEntity();
    $data = $entity->getData();
    $data["loan_status"] = "Pre-Approved";
    $elements["loan_status"]["#value"] = "Pre-Approved";
    $elements["loan_status"]["#default_value"] = "Pre-Approved";
    if ($elements["round"]["#default_value"] == "Yes") {
        $data["draw_status"] = "Second Draw";
        $elements["draw_status"]["#value"] = "Second Darw";
        $elements["draw_status"]["#default_value"] = "Second Draw";
        
    }
    else {
        $data["draw_status"] = "First Draw";
        $elements["draw_status"]["#value"] = "First Darw";
        $elements["draw_status"]["#default_value"] = "First Draw";
    }
    $entity->setData($data);
    $entity->save();
    return $form["elements"]["loan_officer_page"];
}

function application_request_to_sba(array &$form, FormStateInterface $form_state) {
    $controller = new SBALoanController();
    $controller->sendLoanRequest($form, $form_state);
    return $form["elements"]["loan_officer_page"];
}

function application_send_lender_docusign_form(array &$form, FormStateInterface $form_state) {
    $controller = new LenderController();
    $controller->createLenderFormPDF($form, $form_state);
    return $form["elements"]["loan_officer_page"];
}

function application_send_sba_note(array &$form, FormStateInterface $form_state) {
    $elements = WebformFormHelper::flattenElements($form);
    $application_controller = new ApplicationController($elements);
    $application_controller->login();
    $application_controller->sendSBANote($form, $form_state);
    $entity = $form_state->getFormObject()->getEntity();
    $data = $entity->getData();
    $data["loan_status"] = "Approved";
    $entity->setData($data);
    $entity->save();
    $elements["loan_status"]["#defalut_value"] = "Approved";
    $elements["loan_status"]["#value"] = "Approved";
    return $form["elements"]["loan_officer_page"];
}

function application_form_webform_submission_apply_for_flp_loan_edit_all_form_alter(array &$form, FormStateInterface &$form_state, $form_id) {
    $elements = WebformFormHelper::flattenElements($form);
    
    $form["elements"]["lender_confirmation"]["#prefix"] = '<div id="lender-confirmation-ajax-wrapper">';
    $form["elements"]["lender_confirmation"]["#suffix"] = "</div>";

    $file_url = $form["elements"]["lender_confirmation"]["form_file_name"]["#default_value"];
    $url = '';
    if ($file_url) {
        $url = '<a href="' . $file_url . '">3508S Form</a>';
    }

    $form["elements"]["lender_confirmation"]["docusign_file_link"] = [
        '#type' => 'inline_template',
        '#template' => $url
    ];
    /*
    // Button of download file
    $form["elements"]["lender_confirmation"]["btn_download_document"] = [
        '#type' => 'button',
        '#value' => 'Download Docusign Form',
        '#ajax' => [
            'callback' => 'application_download_docusign_document',
            'event' => 'click',
            'wrapper' => 'lender-confirmation-ajax-wrapper',
            'progress' => [
                'type' => 'throbber',
                'message' => "Verifying",
            ],
        ]
    ];
    */
    // Button of re-create docusign form
    $form["elements"]["lender_confirmation"]["btn_resend_forgive_form"] = [
        '#type' => 'button',
        '#value' => 'Resend Docusign Form',
        '#ajax' => [
            'callback' => 'application_send_fogive_form',
            'event' => 'click',
            'wrapper' => 'lender-confirmation-ajax-wrapper',
            'progress' => [
                'type' => 'throbber',
                'message' => "Verifying",
            ],
        ],
    ];

    $form["elements"]["lender_confirmation"]["btn_send_request"] = [
        '#type' => 'button',
        '#value' => 'Send to SBA',
        '#ajax' => [
            'callback' => 'application_send_request',
            'event' => 'click',
            'wrapper' => 'lender-confirmation-ajax-wrapper',
            'progress' => [
                'type' => 'throbber',
                'message' => "Verifying",
            ],
        ],
    ];

    $form["elements"]["lender_confirmation"]["btn_upload_document"] = [
        '#type' => 'button',
        '#value' => 'Upload',
        '#ajax' => [
            'callback' => 'application_upload_document',
            'event' => 'click',
            'wrapper' => 'lender-confirmation-ajax-wrapper',
            'progress' => [
                'type' => 'throbber',
                'message' => "Verifying",
            ],
        ],
    ];

    $form["elements"]["lender_confirmation"]["btn_delete_request"] = [
        '#type' => 'button',
        '#value' => 'Withdraw Request',
        '#ajax' => [
            'callback' => 'application_delete_request',
            'event' => 'click',
            'wrapper' => 'lender-confirmation-ajax-wrapper',
            'progress' => [
                'type' => 'throbber',
                'message' => "Verifying",
            ],
        ],
    ];
    
    // calculate forgive amount
    $order = array("$", " ", ",");

    #$forgiveness_amount = str_replace($order, "", $elements["forgiveness_calculation"]["#default_value"]);
    #$eidl_amount = str_replace($order, "", $elements["eidl_advance_amount_if_applicable_"]["#default_value"]);

    #$forgive_amount = $forgiveness_amount - $eidl_amount;
    #$elements["forgive_amount"]["#default_value"] = $forgive_amount;
    
    $controller = new SBALFAController($elements);
    $controller->login();
    $controller->downloadForgivenessForm($form, $form_state);
    
    $controller2 = new SBAForgivenessRequestController();
    $controller2->getRequestStatus($elements, $form, $form_state);

}

function application_send_request(array &$form, FormStateInterface $form_state) {
    $elements = WebformFormHelper::flattenElements($form);

    $controller = new SBAForgivenessRequestController();
    $controller->sendForgivenessRequest($elements, $form, $form_state);
    
    return $form["elements"]["lender_confirmation"];
}

function application_delete_request(array &$form, FormStateInterface $form_state) {
    $controller = new SBAForgivenessRequestController();
    $controller->deleteRequest($form, $form_state);
    return $form["elements"]["lender_confirmation"];
}

function application_upload_document(array &$form, FormStateInterface $form_state) {
    $elements = WebformFormHelper::flattenElements($form);

    $controller = new SBAForgivenessRequestController();
    $controller->uploadDocument($elements, $form, $form_state);
    
    return $form["elements"]["lender_confirmation"];
}

function application_download_docusign_document(array &$form, FormStateInterface $form_state) {
    $controller = new SBALFAController($elements);
    $controller->login();
    $controller->downloadForgivenessForm($form, $form_state);
    return $form["elements"]["lender_confirmation"];
}

function application_send_fogive_form(array &$form, FormStateInterface $form_state) {
    $elements = WebformFormHelper::flattenElements($form);
    $controller = new SBALFAController($elements);
    $controller->login();
    $result = $controller->sendForm();
    if (!empty($result) && isset($result["envelope_id"])) {
        $entity = $form_state->getFormObject()->getEntity();
        $data = $entity->getData();
        $data["envelope_id"] = $result["envelope_id"];
        $data["envelope_status"] = "sent";
        $data["form_file_name"] = "";
        $entity->setData($data);
        $entity->save();
        $form["elements"]["lender_confirmation"]["form_file_name"]["#value"] = "";
        $form["elements"]["lender_confirmation"]["form_file_name"]["#default_value"] = "";
        $form["elements"]["lender_confirmation"]["envelope_status"]["#value"] = "sent";
        $form["elements"]["lender_confirmation"]["envelope_status"]["#default_value"] = "sent";
        $form["elements"]["lender_confirmation"]["envelope_id"]["#value"] = $result["envelope_id"];
        $form["elements"]["lender_confirmation"]["envelope_id"]["#default_value"] = $result["envelope_id"];
    }
    
    return $form["elements"]["lender_confirmation"];
}

function application_webform_submission_form_alter(array &$form, FormStateInterface &$form_state, $form_id){
    if(in_array($form_id, ['webform_submission_apply_for_flp_loan_add_form', 'webform_submission_apply_for_flp_loan_edit_form']) && isset($_SESSION['_symfony_flashes']['status']) && is_array($_SESSION['_symfony_flashes']['status'])) {
        foreach($_SESSION['_symfony_flashes']['status'] as $idx => $msg) {
            $msg_txt = "";
            if (is_string($msg)) {
                $msg_txt = $msg;
            }
            else {
                $msg_txt = $msg->__toString();
            }
            if (strpos($msg_txt, 'pending draft') !== false)  unset($_SESSION['_symfony_flashes']['status'][$idx]);
        }
        if(count($_SESSION['_symfony_flashes']['status']) == 0) unset($_SESSION['_symfony_flashes']['status']);
    }
}



/**
 * Implements hook_webform_element_alter().
 *
 * @param array              $element
 * @param FormStateInterface $form_state
 * @param array              $context
 */
function application_webform_element_alter(array &$element, FormStateInterface $form_state, array $context) {
  // check for desired element
  if (isset($element['#webform_id']) && $element['#webform_id'] === 'apply_for_ppp_loan--date_of_birth') {
    $element['#element_validate'][] = [
      'Drupal\application\Validate\ApplicationValidate',
      'birthdayValidate'
    ];
  }
}