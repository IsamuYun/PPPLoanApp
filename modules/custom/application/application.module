<?php

/**
 * @file
 * Manage Application Submission Module
 */
use Drupal\Component\Utility\Variable;
use Drupal\webform\Utility\WebformFormHelper;
use Drupal\Core\Render\Element;
use Drupal\Core\Ajax\AjaxResponse;
use Drupal\Core\Ajax\AlertCommand;
use Drupal\Core\Form\FormStateInterface;

use Drupal\application\Controller\ApplicationController;
use Drupal\application\Controller\SBAForgivenessRequestController;
use Drupal\application\Controller\SBALFAController;
use Drupal\application\Controller\LenderController;

function application_form_webform_submission_apply_for_ppp_loan_edit_all_form_alter(array &$form, FormStateInterface &$form_state, $form_id) {
    $elements = WebformFormHelper::flattenElements($form);
    $application_controller = new ApplicationController($elements);
    $application_controller->login();

    $form["elements"]["loan_officer_page"]["#prefix"] = '<div id="loan-officer-ajax-wrapper">';
    $form["elements"]["loan_officer_page"]["#suffix"] = "</div>";

    $form["elements"]["loan_officer_page"]["btn_send_borrower_form"] = [
        "#type" => "button",
        "#value" => "Send Borrower Form",
        "#ajax" => [
            "callback" => "application_send_borrower_docusign_form",
            "event" => "click",
            "wrapper" => "loan-officer-ajax-wrapper",
            "progress" => [
                "type" => "throbber",
                "message" => "Sending...",
            ],
        ]
    ];

    $form["elements"]["loan_officer_page"]["btn_send_lender_form"] = [
        "#type" => "button",
        "#value" => "Send Lender Form",
        "#ajax" => [
            "callback" => "application_send_lender_docusign_form",
            "event" => "click",
            "wrapper" => "loan-officer-ajax-wrapper",
            "progress" => [
                "type" => "throbber",
                "message" => "Sending...",
            ],
        ]
    ];

    #$email = \Drupal::currentUser()->getEmail();
    $officer_uid = \Drupal::currentUser()->id();

    $elements["loan_officer"]["#value"] = $officer_uid;
    $elements["loan_officer"]["#default_value"] = $officer_uid;


    //application_verify_netearnings($form, $form_state);
}

function application_form_webform_submission_apply_for_ppp_loan_edit_form_alter(array &$form, FormStateInterface &$form_state, $form_id) {
    #$elements = WebformFormHelper::flattenElements($form);
    
    #$form["elements"]["loan_officer_page"]["verified_net_earnings"]['#prefix'] = '<div id="loan-form-ajax-wrapper">';
    #$form["elements"]["loan_officer_page"]["verified_net_earnings"]['#suffix'] = '</div>';
    
    $form["elements"]["loan_officer_page"]["sba_response"]["#prefix"] = '<div id="sba-response-ajax-wrapper">';
    $form["elements"]["loan_officer_page"]["sba_response"]["#suffix"] = "</div>";
    
    $form["elements"]["loan_officer_page"]["btn_cancel_loan"] = [
        '#type' => 'button',
        '#value' => 'Cancel Loan',
        '#ajax' => [
            'callback' => 'application_cancel_loan',
            'event' => 'click',
            'wrapper' => 'sba-response-ajax-wrapper',
            'progress' => [
                'type' => 'throbber',
                'message' => "Verifying",
            ],
        ]
    ];

    $form["elements"]["loan_officer_page"]["btn_send_to_sba"] = [
        '#type' => 'button',
        '#value' => 'Send to SBA',
        '#ajax' => [
            'callback' => 'application_send_to_sba',
            'event' => 'click',
            'wrapper' => 'sba-response-ajax-wrapper',
            'progress' => [
                'type' => 'throbber',
                'message' => 'Sending...',
            ],
        ],
        '#weight' => 5,
    ];

}

function application_form_webform_submission_apply_for_ppp_loan_add_form_alter(array &$form, FormStateInterface &$form_state, $form_id) {
    $elements = WebformFormHelper::flattenElements($form);

    #dpm($elements);
    
    #$elements["borrower_email"]["#default_value"] = \Drupal::currentUser()->getEmail();

    $elements["borrower_email"]["#default_value"] = "yun@rmdslab.com";

    $application_controller = new ApplicationController($elements);

    $application_controller->login();

    $form['actions']['submit']['#submit'][]  = 'application_form_submit';

    #$form['actions']['wizard_next']['#submit'][] = 'application_verify_netearnings';

    

}

function application_form_webform_submission_apply_for_flp_loan_add_form_alter(array &$form, FormStateInterface &$form_state, $form_id) {
    $elements = WebformFormHelper::flattenElements($form);
    // calculate forgive amount
    $order = array("$", " ", ",");

    #$forgiveness_amount = str_replace($order, "", $elements["forgiveness_calculation"]["#default_value"]);
    #$eidl_amount = str_replace($order, "", $elements["eidl_advance_amount_if_applicable_"]["#default_value"]);

    #$forgive_amount = $forgiveness_amount - $eidl_amount;

    #$elements["forgive_amount"]["#default_value"] = $forgive_amount;
    $controller = new SBALFAController($elements);
    $controller->login();
    $form['actions']['submit']['#submit'][]  = 'application_send_fogive_form';
}

function application_send_borrower_docusign_form(array &$form, FormStateInterface $form_state) {
    $elements = WebformFormHelper::flattenElements($form);
    $application_controller = new ApplicationController($elements);
    $application_controller->login();
    $application_controller->sendBorrowerDocuSignForm($form, $form_state);
    return $form["elements"]["loan_officer_page"];
}

function application_send_lender_docusign_form(array &$form, FormStateInterface $form_state) {
    $controller = new LenderController();
    $controller->createLenderFormPDF($form, $form_state);
    return $form["elements"]["loan_officer_page"];
}

function application_verify_netearnings(array &$form, FormStateInterface $form_state) {
    #$response = new AjaxResponse();

    $elements = WebformFormHelper::flattenElements($form);

    /*
    if (floatval($elements["verified_net_earnings"]["#default_value"]) > 0) {
        return;
    }

    $file_id = $form["elements"]["request_document_1"]["1040_schedule_c"]["#default_value"][0];
    
    if ($file_id) {
        $file = \Drupal\file\Entity\File::load($file_id);
        $filename = $file->getFilename();

        $submission_id = $form["elements"]["request_document_1"]["1040_schedule_c"]["#webform_submission"];

        $full_filename = $submission_id . '/' . $filename;
        
        $client = \Drupal::httpClient();
        $request = $client->post('http://161.35.226.185:8000/detect_1040_schedule_C', [
            'form_params' => [
                'filename' => $full_filename,
            ],
            'headers' => [
                'Content-type' => 'application/x-www-form-urlencoded',
            ],
        ]);
        

        $result = json_decode($request->getBody());
    
        $form["elements"]["loan_officer_page"]["verified_net_earnings"]["#value"] = $result->{"response"};
        $form["elements"]["loan_officer_page"]["verified_net_earnings"]["#default_value"] = $result->{"response"};
        $elements["verified_net_earnings"]["#default_value"] = $result->{"response"};
    }
    */
}

function application_cancel_loan(array &$form, FormStateInterface $form_state) {
    $elements = WebformFormHelper::flattenElements($form);
    $data = [
        'MethodNamePhysical' => 'Servicing2',
        'CLSUsername' => 'alctester',
        'CLSPassword' => 'Squall39478',
        'CLSPIN' => '303330',
        'EMail' => 'yun@rmdslab.com',
        'FormatIn' => 'XML',
        'FormatOut' => 'JSON',
        'RequestData' => "<SBA_ETran version=\"6.0\"><SBALoan action=\"cancel\"><Loan action=\"update\"><LoanApplicNmb>155878</LoanApplicNmb><LoanNmb>8936745005</LoanNmb></Loan></SBALoan></SBA_ETran>",
        'SoftwareVendorCode' => "WZHZUDAQX",
	    'SoftwareVendorName' => "AMERICANLENDINGCENTER"
    ];

    $json_data = json_encode($data);
    
    $client = \Drupal::httpClient();
    $request = $client->post('https://catweb2.sba.gov/rest/elend/flexible/SharedEntryPoint', [
        'body' => $json_data,
        'headers' => [
            'Content-type' => 'application/json',
        ],
    ]);


    $result = json_decode($request->getBody());
    
    #dpm(json_decode($result->ResponseData));
    
    $form["elements"]["loan_officer_page"]["sba_response"]["#value"] = $result->{"ResponseData"};

    return $form["elements"]["loan_officer_page"]["sba_response"];
}

function application_send_to_sba(array &$form, FormStateInterface $form_state) {
    $elements = WebformFormHelper::flattenElements($form);
    $request_data_str = application_json_builder($elements);
    #dpm($request_data_str);
    $data = [
        'MethodNamePhysical' => 'Originate3',
        'CLSUsername' => 'alctester',
        'CLSPassword' => 'Squall39478',
        'CLSPIN' => '303330',
        'EMail' => 'yun@rmdslab.com',
        'FormatIn' => 'JSON',
        'RequestData' => $request_data_str,
        'SoftwareVendorCode' => "WZHZUDAQX",
	    'SoftwareVendorName' => "AMERICANLENDINGCENTER"
    ];

    $json_data = json_encode($data);
    
    $client = \Drupal::httpClient();
    $request = $client->post('https://catweb2.sba.gov/rest/elend/flexible/SharedEntryPoint', [
        'body' => $json_data,
        'headers' => [
            'Content-type' => 'application/json',
        ],
    ]);


    $result = json_decode($request->getBody());
    
    #dpm(json_decode($result->ResponseData));
    
    $form["elements"]["loan_officer_page"]["sba_response"]["#value"] = $result->{"ResponseData"};

    return $form["elements"]["loan_officer_page"]["sba_response"];
}

function application_cancel_loan_builder(array &$elements) {
    $request_data = new stdClass();
    $request_data->version = "6.0";
    $App = new stdClass();
    $App->action = "cancel";
    $LoanApplication = new stdClass();
    $LoanApplication->action = "update";
    $LoanApplication->LoanApplicNmb = "155878";
    $LoanApplication->LoanNmb = "89367450-05";
    $App->LoanApplication = [$LoanApplication];
    $request_data->App = $App;
    return json_encode($request_data);
}

function application_json_builder(array &$elements) {
}

function application_form_webform_submission_forgiveness_form_add_form_alter(array &$form, FormStateInterface &$form_state, $form_id) {
    $elements = WebformFormHelper::flattenElements($form);

    #$elements["borrower_email"]["#default_value"] = \Drupal::currentUser()->getEmail();

    $application_controller = new ApplicationController($elements);

    $application_controller->login();

    #$form['actions']['submit']['#submit'][]  = 'application_forgiveness_form_submit';

    #$form['actions']['wizard_next']['#submit'][] = 'application_verify_netearnings';

    
    $form["elements"]["envelope_id"]["#prefix"] = '<div id="envelope-id-ajax-wrapper">';
    $form["elements"]["envelope_id"]["#suffix"] = "</div>";
    
    $form["elements"]["btn_create_envelope"] = [
        '#type' => 'button',
        '#value' => 'Create Envelope',
        '#ajax' => [
            'callback' => 'application_create_envelope',
            'event' => 'click',
            'wrapper' => 'envelope-id-ajax-wrapper',
            'progress' => [
                'type' => 'throbber',
                'message' => "Verifying",
            ],
        ]
    ];
    
    $form["elements"]["document_name"]["#prefix"] = '<div id="document-name-ajax-wrapper">';
    $form["elements"]["document_name"]["#suffix"] = '</div>';

    $form["elements"]["btn_download_document"] = [
        '#type' => 'button',
        '#value' => 'Download Document',
        '#ajax' => [
            'callback' => 'application_download_document',
            'event' => 'click',
            'wrapper' => 'document-name-ajax-wrapper',
            'progress' => [
                'type' => 'throbber',
                'message' => "Verifying",
            ],
        ]
    ];

}

function application_create_envelope(array &$form, FormStateInterface $form_state) {
    $elements = WebformFormHelper::flattenElements($form);
    
    $application_controller = new ApplicationController($elements);
    $application_controller->login();
    $result = $application_controller->buildForgivenessForm();

    $form["elements"]["envelope_id"]["#value"] = $result["envelope_id"];
    $form["elements"]["envelope_id"]["#default_value"] = $result["envelope_id"];
    
    return $form["elements"]["envelope_id"];
}

function application_forgiveness_form_submit(array &$form, FormStateInterface $form_state) {
    $elements = WebformFormHelper::flattenElements($form);
    $application_controller = new ApplicationController($elements);
    $application_controller->login();
    #$result = $application_controller->buildForgivenessForm();

    
    #$elements["envelope_id"]["#default_value"] = $result["envelope_id"];
    
    #$entity = $form_state->getFormObject()->getEntity();
    #$data = $entity->getData();
    #$data["envelope_id"] = $result["envelope_id"];
    #$entity->setData($data);
    #$entity["#data"]["envelope_id"] = $result["envelope_id"];
    #$entity->save();

    $results = $application_controller->downloadForgivenessForm();
}

function application_download_document(array &$form, FormStateInterface $form_state) {
    $elements = WebformFormHelper::flattenElements($form);
    
    $application_controller = new ApplicationController($elements);
    $application_controller->login();
    $results = $application_controller->downloadForgivenessForm();

    $form["elements"]["document_name"]["#value"] = $results;
    $form["elements"]["document_name"]["#default_value"] = $results;
    
    return $form["elements"]["document_name"];
}

function application_form_webform_submission_apply_for_flp_loan_edit_all_form_alter(array &$form, FormStateInterface &$form_state, $form_id) {
    $elements = WebformFormHelper::flattenElements($form);
    
    $form["elements"]["lender_confirmation"]["#prefix"] = '<div id="lender-confirmation-ajax-wrapper">';
    $form["elements"]["lender_confirmation"]["#suffix"] = "</div>";

    $file_url = $form["elements"]["lender_confirmation"]["form_file_name"]["#default_value"];
    $url = '';
    if ($file_url) {
        $url = '<a href="' . $file_url . '">3508S Form</a>';
    }

    $form["elements"]["lender_confirmation"]["docusign_file_link"] = [
        '#type' => 'inline_template',
        '#template' => $url
    ];
    /*
    // Button of download file
    $form["elements"]["lender_confirmation"]["btn_download_document"] = [
        '#type' => 'button',
        '#value' => 'Download Docusign Form',
        '#ajax' => [
            'callback' => 'application_download_docusign_document',
            'event' => 'click',
            'wrapper' => 'lender-confirmation-ajax-wrapper',
            'progress' => [
                'type' => 'throbber',
                'message' => "Verifying",
            ],
        ]
    ];
    */
    // Button of re-create docusign form
    $form["elements"]["lender_confirmation"]["btn_resend_forgive_form"] = [
        '#type' => 'button',
        '#value' => 'Resend Docusign Form',
        '#ajax' => [
            'callback' => 'application_send_fogive_form',
            'event' => 'click',
            'wrapper' => 'lender-confirmation-ajax-wrapper',
            'progress' => [
                'type' => 'throbber',
                'message' => "Verifying",
            ],
        ],
    ];

    $form["elements"]["lender_confirmation"]["btn_send_request"] = [
        '#type' => 'button',
        '#value' => 'Send to SBA',
        '#ajax' => [
            'callback' => 'application_send_request',
            'event' => 'click',
            'wrapper' => 'lender-confirmation-ajax-wrapper',
            'progress' => [
                'type' => 'throbber',
                'message' => "Verifying",
            ],
        ],
    ];

    $form["elements"]["lender_confirmation"]["btn_upload_document"] = [
        '#type' => 'button',
        '#value' => 'Upload',
        '#ajax' => [
            'callback' => 'application_upload_document',
            'event' => 'click',
            'wrapper' => 'lender-confirmation-ajax-wrapper',
            'progress' => [
                'type' => 'throbber',
                'message' => "Verifying",
            ],
        ],
    ];

    $form["elements"]["lender_confirmation"]["btn_delete_request"] = [
        '#type' => 'button',
        '#value' => 'Withdraw Request',
        '#ajax' => [
            'callback' => 'application_delete_request',
            'event' => 'click',
            'wrapper' => 'lender-confirmation-ajax-wrapper',
            'progress' => [
                'type' => 'throbber',
                'message' => "Verifying",
            ],
        ],
    ];
    
    // calculate forgive amount
    $order = array("$", " ", ",");

    #$forgiveness_amount = str_replace($order, "", $elements["forgiveness_calculation"]["#default_value"]);
    #$eidl_amount = str_replace($order, "", $elements["eidl_advance_amount_if_applicable_"]["#default_value"]);

    #$forgive_amount = $forgiveness_amount - $eidl_amount;
    #$elements["forgive_amount"]["#default_value"] = $forgive_amount;
    
    $controller = new SBALFAController($elements);
    $controller->login();
    $controller->downloadForgivenessForm($form, $form_state);
    
    $controller2 = new SBAForgivenessRequestController();
    $controller2->getRequestStatus($elements, $form, $form_state);

}

function application_send_request(array &$form, FormStateInterface $form_state) {
    $elements = WebformFormHelper::flattenElements($form);

    $controller = new SBAForgivenessRequestController();
    $controller->sendForgivenessRequest($elements, $form, $form_state);
    
    return $form["elements"]["lender_confirmation"];
}

function application_delete_request(array &$form, FormStateInterface $form_state) {
    $controller = new SBAForgivenessRequestController();
    $controller->deleteRequest($form, $form_state);
    return $form["elements"]["lender_confirmation"];
}

function application_upload_document(array &$form, FormStateInterface $form_state) {
    $elements = WebformFormHelper::flattenElements($form);

    $controller = new SBAForgivenessRequestController();
    $controller->uploadDocument($elements, $form, $form_state);
    
    return $form["elements"]["lender_confirmation"];
}

function application_download_docusign_document(array &$form, FormStateInterface $form_state) {
    $controller = new SBALFAController($elements);
    $controller->login();
    $controller->downloadForgivenessForm($form, $form_state);
    return $form["elements"]["lender_confirmation"];
}

function application_send_fogive_form(array &$form, FormStateInterface $form_state) {
    $elements = WebformFormHelper::flattenElements($form);
    $controller = new SBALFAController($elements);
    $controller->login();
    $result = $controller->sendForm();
    if (!empty($result) && isset($result["envelope_id"])) {
        $entity = $form_state->getFormObject()->getEntity();
        $data = $entity->getData();
        $data["envelope_id"] = $result["envelope_id"];
        $data["envelope_status"] = "sent";
        $data["form_file_name"] = "";
        $entity->setData($data);
        $entity->save();
        $form["elements"]["lender_confirmation"]["form_file_name"]["#value"] = "";
        $form["elements"]["lender_confirmation"]["form_file_name"]["#default_value"] = "";
        $form["elements"]["lender_confirmation"]["envelope_status"]["#value"] = "sent";
        $form["elements"]["lender_confirmation"]["envelope_status"]["#default_value"] = "sent";
        $form["elements"]["lender_confirmation"]["envelope_id"]["#value"] = $result["envelope_id"];
        $form["elements"]["lender_confirmation"]["envelope_id"]["#default_value"] = $result["envelope_id"];
    }
    
    return $form["elements"]["lender_confirmation"];
}

function application_webform_submission_form_alter(array &$form, FormStateInterface &$form_state, $form_id){
    if(in_array($form_id, ['webform_submission_apply_for_flp_loan_add_form', 'webform_submission_apply_for_flp_loan_edit_form']) && isset($_SESSION['_symfony_flashes']['status']) && is_array($_SESSION['_symfony_flashes']['status'])) {
        foreach($_SESSION['_symfony_flashes']['status'] as $idx => $msg) {
            $msg_txt = "";
            if (is_string($msg)) {
                $msg_txt = $msg;
            }
            else {
                $msg_txt = $msg->__toString();
            }
            if (strpos($msg_txt, 'pending draft') !== false)  unset($_SESSION['_symfony_flashes']['status'][$idx]);
        }
        if(count($_SESSION['_symfony_flashes']['status']) == 0) unset($_SESSION['_symfony_flashes']['status']);
    }
}